[{"path":"https://dissc-yale.github.io/WorkInData/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 WorkInData authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/WorkInData.html","id":"cluster-setup","dir":"Articles","previous_headings":"","what":"Cluster setup","title":"Get Started","text":"microdata stored Yale’s Grace HPC cluster. Assuming Yale identity, see YCRC guide get started cluster. package requires Arrow, available cluster modules (e.g., Arrow/16).","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/WorkInData.html","id":"using-the-data","dir":"Articles","previous_headings":"","what":"Using the data","title":"Get Started","text":"Start installing package needed: load library connect data: , data regular Arrow Dataset, can use dplyr interact , wid_subset function can used filter efficiently. instance, might look working status among graduate degree 2018 age sex:","code":"# install.packages(\"remotes\") remotes::install_github(\"dissc-yale/WorkInData\") library(WorkInData)  data <- wid_open(\"/gpfs/gibbs/pi/dissc/work-in-data/gender_growth_gap\") data_small <- data |>   wid_subset(year == 2018, education == \"Graduate\") |>   dplyr::select(age, sex, work) |>   dplyr::collect()  data_small #> # A tibble: 217,271 × 3 #>      age sex   work  #>    <int> <lgl> <lgl> #>  1    76 FALSE TRUE  #>  2    67 FALSE FALSE #>  3    77 FALSE FALSE #>  4    55 FALSE TRUE  #>  5    48 FALSE TRUE  #>  6    42 FALSE TRUE  #>  7    47 TRUE  FALSE #>  8    51 FALSE FALSE #>  9    48 TRUE  TRUE  #> 10    34 TRUE  FALSE #> # ℹ 217,261 more rows with(data_small, table(   c(\"Yonger\", \"Older\")[(age > mean(age, na.rm = TRUE)) + 1L],   c(\"Male\", \"Female\")[sex + 1L],   work )) #> , , work = FALSE #>  #>          #>          Female  Male #>   Older   19551 20005 #>   Yonger  17869  7537 #>  #> , , work = TRUE #>  #>          #>          Female  Male #>   Older   28801 34676 #>   Yonger  45667 41441"},{"path":[]},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"survey","dir":"Articles","previous_headings":"Sample","what":"Survey","title":"Variables","text":"Initials source survey. ID: survey Type: string Missing: 0 Value Summary:","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"year","dir":"Articles","previous_headings":"Sample","what":"Year","title":"Variables","text":"Year survey conducted. ID: year Type: int32 Missing: 0 Value Summary:","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"survey-year","dir":"Articles","previous_headings":"Sample","what":"Survey Year","title":"Variables","text":"Survey year panel construction. ID: survey_year Type: int16 Missing: 135,278,433 Value Summary:","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"sampling-weight","dir":"Articles","previous_headings":"Sample","what":"Sampling Weight","title":"Variables","text":"Weight provided source survey; either cross-sectional panel. ID: wgt Type: float Missing: 1,167,729 Value Summary:","code":""},{"path":[]},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"country","dir":"Articles","previous_headings":"Location","what":"Country","title":"Variables","text":"Country survey conducted. ID: country Type: string Missing: 0 Value Summary:","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"rural","dir":"Articles","previous_headings":"Location","what":"Rural","title":"Variables","text":"Whether respondent’s location classified rural. ID: rural Type: bool Missing: 56,522,713 Value Summary:","code":""},{"path":[]},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"individual-id","dir":"Articles","previous_headings":"Individual","what":"Individual ID","title":"Variables","text":"Individual identifier. ID: id_ind Type: string Missing: 0 Value Summary:","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"age","dir":"Articles","previous_headings":"Individual","what":"Age","title":"Variables","text":"Respondents age. ID: age Type: int32 Missing: 628,673 Value Summary:","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"sex","dir":"Articles","previous_headings":"Individual","what":"Sex","title":"Variables","text":"Whether respondent reported female. ID: sex Type: bool Missing: 576,976 Value Summary:","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"marital-status","dir":"Articles","previous_headings":"Individual","what":"Marital Status","title":"Variables","text":"Marital status respondent. ID: marital_status Type: string Missing: 14,572,489 Value Summary:","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"education","dir":"Articles","previous_headings":"Individual","what":"Education","title":"Variables","text":"Highest level education completed. ID: education Type: string Missing: 22,597,122 Value Summary:","code":""},{"path":[]},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"children-under-5","dir":"Articles","previous_headings":"Household","what":"Children Under 5","title":"Variables","text":"Number children 5 within household. ID: n_child_5 Type: int16 Missing: 59,692,991 Value Summary:","code":""},{"path":[]},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"working","dir":"Articles","previous_headings":"Work","what":"Working","title":"Variables","text":"Whether respondent worked reference period. ID: work Type: bool Missing: 35,134,187 Value Summary:","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"looking-for-work","dir":"Articles","previous_headings":"Work","what":"Looking for Work","title":"Variables","text":"Whether respondent looking work, given currently working. ID: work_search Type: bool Missing: 143,080,517 Value Summary:","code":""},{"path":[]},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"industry-classification","dir":"Articles","previous_headings":"Job","what":"Industry Classification","title":"Variables","text":"Industry classification (International Standard Industrial Classification; ISIC). ID: main_job_ind Type: string Missing: 128,471,814 Value Summary:","code":""},{"path":"https://dissc-yale.github.io/WorkInData/articles/variables.html","id":"job-activity-category","dir":"Articles","previous_headings":"Job","what":"Job Activity Category","title":"Variables","text":"working, industry sector job; otherwise, either unemployed workforce. ID: main_activity Type: string Missing: 47,988,417 Value Summary:","code":""},{"path":"https://dissc-yale.github.io/WorkInData/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yale Economic Growth Center. Funder, copyright holder. Micah Iserman. Maintainer, author.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Iserman M (2025). WorkInData: Work Data. R package version 0.1.0, https://github.com/dissc-yale/WorkInData, https://dissc-yale.github.io/WorkInData.","code":"@Manual{,   title = {WorkInData: Work in Data},   author = {Micah Iserman},   year = {2025},   note = {R package version 0.1.0, https://github.com/dissc-yale/WorkInData},   url = {https://dissc-yale.github.io/WorkInData}, }"},{"path":"https://dissc-yale.github.io/WorkInData/index.html","id":"work-in-data","dir":"","previous_headings":"","what":"Work in Data","title":"Work in Data","text":"R package reformat work Work Data dataset.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/index.html","id":"data-access","dir":"","previous_headings":"","what":"Data Access","title":"Work in Data","text":"Aggregated data available gender_gap/public/data.json.gz. See Gender Growth Gap site explore download different format. Microdata currently accessible externally.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/index.html","id":"package-installation","dir":"","previous_headings":"","what":"Package Installation","title":"Work in Data","text":"Install package R console: load package:","code":"# install.packages(\"remotes\") remotes::install_github(\"dissc-yale/WorkInData\") library(WorkInData)"},{"path":"https://dissc-yale.github.io/WorkInData/reference/WorkInData-package.html","id":null,"dir":"Reference","previous_headings":"","what":"WorkInData: Work in Data — WorkInData-package","title":"WorkInData: Work in Data — WorkInData-package","text":"Reformat work Work Data dataset.","code":""},{"path":[]},{"path":"https://dissc-yale.github.io/WorkInData/reference/WorkInData-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WorkInData: Work in Data — WorkInData-package","text":"Maintainer: Micah Iserman micah.iserman@gmail.com contributors: Yale Economic Growth Center [funder, copyright holder]","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/download_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Download CDS Reports — download_reports","title":"Download CDS Reports — download_reports","text":"Download CDS PDF reports given school, using URLs retrieved get_report_links.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/download_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download CDS Reports — download_reports","text":"","code":"download_reports(school, out_dir, overwrite = FALSE, verbose = TRUE)"},{"path":"https://dissc-yale.github.io/WorkInData/reference/download_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download CDS Reports — download_reports","text":"school Name school. out_dir Path output directory, contain output get_report_links. overwrite Logical; TRUE, always try download reports. verbose Logical; FALSE, show status messages.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/download_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download CDS Reports — download_reports","text":"list entry report, also saved {out_dir}/{school}/manifest.json: url: Link report. retrieved: Time report downloaded. md5: MD5 sum report.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/download_reports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download CDS Reports — download_reports","text":"","code":"if (dir.exists(\"../../data/source\")) {   manifest <- download_reports(\"yale\", \"../../data/source\")   manifest[1:2] } #> checking 16 files... #>   - cds_yale_2023-24_vf_20240320.pdf retrieved Wed Aug 28 08:55:33 2024 #>   - cds_yale_2022-2023_vf_10062023.pdf retrieved Wed Aug 28 08:55:33 2024 #>   - yale_cds_2021-2022_vf_06062022_0.pdf retrieved Wed Aug 28 08:55:33 2024 #>   - cds_2020-2021_yale_vf_030521.pdf retrieved Wed Aug 28 08:55:33 2024 #>   - cds_2019-2020_yale_vf_030420.pdf retrieved Wed Aug 28 08:55:33 2024 #>   - cds_yale_2018-2019.pdf retrieved Wed Aug 28 08:55:34 2024 #>   - cds_2017-2018.pdf retrieved Wed Aug 28 08:55:34 2024 #>   - cds2016-2017.pdf retrieved Wed Aug 28 08:55:34 2024 #>   - cds2015_2016_0.pdf retrieved Wed Aug 28 08:55:34 2024 #>   - cds2014_2015_0.pdf retrieved Wed Aug 28 08:55:34 2024 #>   - cds2013_2014.pdf retrieved Wed Aug 28 08:55:34 2024 #>   - cds2012_2013.pdf retrieved Wed Aug 28 08:55:34 2024 #>   - cds2011_2012_3.pdf retrieved Wed Aug 28 08:55:34 2024 #>   - cds2010_2011_1.pdf retrieved Wed Aug 28 08:55:34 2024 #>   - cds2009_2010_1.pdf retrieved Wed Aug 28 08:55:35 2024 #>   - cds2008_2009_1.pdf retrieved Wed Aug 28 08:55:35 2024 #> $`cds_yale_2023-24_vf_20240320.pdf` #> $`cds_yale_2023-24_vf_20240320.pdf`$url #> [1] \"https://oir.yale.edu/sites/default/files/cds_yale_2023-24_vf_20240320.pdf\" #>  #> $`cds_yale_2023-24_vf_20240320.pdf`$retrieved #> [1] \"Wed Aug 28 08:55:33 2024\" #>  #> $`cds_yale_2023-24_vf_20240320.pdf`$md5 #> [1] \"d5c8a7c3cddbe19fca77bf9cc738eff5\" #>  #>  #> $`cds_yale_2022-2023_vf_10062023.pdf` #> $`cds_yale_2022-2023_vf_10062023.pdf`$url #> [1] \"https://oir.yale.edu/sites/default/files/cds_yale_2022-2023_vf_10062023.pdf\" #>  #> $`cds_yale_2022-2023_vf_10062023.pdf`$retrieved #> [1] \"Wed Aug 28 08:55:33 2024\" #>  #> $`cds_yale_2022-2023_vf_10062023.pdf`$md5 #> [1] \"5b77852508b6d9a2d3c62ae5882a117c\" #>  #>"},{"path":"https://dissc-yale.github.io/WorkInData/reference/get_report_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CDS Links — get_report_links","title":"Get CDS Links — get_report_links","text":"Scrape links individual CDS reports school websites.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/get_report_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CDS Links — get_report_links","text":"","code":"get_report_links(school, out_dir, url = NULL, overwrite = FALSE)"},{"path":"https://dissc-yale.github.io/WorkInData/reference/get_report_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CDS Links — get_report_links","text":"school Name school. out_dir Path output directory. url Link school's CDS page, containing links individual reports. overwrite Logical; TRUE, always try retrieve fresh links, rather using previous pull.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/get_report_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CDS Links — get_report_links","text":"list, also saved {out_dir}/{school}/links.json: school: Name school. url: Link school's CDS page. retrieved: Time links retrieved. links: vector extracted links.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/get_report_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CDS Links — get_report_links","text":"","code":"if (dir.exists(\"../../data/source\")) {   report_links <- get_report_links(     \"yale\", \"../../data/source\", \"https://oir.yale.edu/common-data-set\"   )   report_links } #> $school #> [1] \"yale\" #>  #> $url #> [1] \"https://oir.yale.edu/common-data-set\" #>  #> $retrieved #> [1] \"Wed Aug 28 08:54:06 2024\" #>  #> $links #>  [1] \"https://oir.yale.edu/sites/default/files/cds_yale_2023-24_vf_20240320.pdf\"     #>  [2] \"https://oir.yale.edu/sites/default/files/cds_yale_2022-2023_vf_10062023.pdf\"   #>  [3] \"https://oir.yale.edu/sites/default/files/yale_cds_2021-2022_vf_06062022_0.pdf\" #>  [4] \"https://oir.yale.edu/sites/default/files/cds_2020-2021_yale_vf_030521.pdf\"     #>  [5] \"https://oir.yale.edu/sites/default/files/cds_2019-2020_yale_vf_030420.pdf\"     #>  [6] \"https://oir.yale.edu/sites/default/files/cds_yale_2018-2019.pdf\"               #>  [7] \"https://oir.yale.edu/sites/default/files/cds_2017-2018.pdf\"                    #>  [8] \"https://oir.yale.edu/sites/default/files/cds2016-2017.pdf\"                     #>  [9] \"https://oir.yale.edu/sites/default/files/cds2015_2016_0.pdf\"                   #> [10] \"https://oir.yale.edu/sites/default/files/cds2014_2015_0.pdf\"                   #> [11] \"https://oir.yale.edu/sites/default/files/cds2013_2014.pdf\"                     #> [12] \"https://oir.yale.edu/sites/default/files/cds2012_2013.pdf\"                     #> [13] \"https://oir.yale.edu/sites/default/files/cds2011_2012_3.pdf\"                   #> [14] \"https://oir.yale.edu/sites/default/files/cds2010_2011_1.pdf\"                   #> [15] \"https://oir.yale.edu/sites/default/files/cds2009_2010_1.pdf\"                   #> [16] \"https://oir.yale.edu/sites/default/files/cds2008_2009_1.pdf\"                   #>"},{"path":"https://dissc-yale.github.io/WorkInData/reference/schoolCDS-package.html","id":null,"dir":"Reference","previous_headings":"","what":"schoolCDS: School Common Data Set (CDS) Data — schoolCDS-package","title":"schoolCDS: School Common Data Set (CDS) Data — schoolCDS-package","text":"Collect, process, work school Common Data Set (CDS) data (https://commondataset.org).","code":""},{"path":[]},{"path":"https://dissc-yale.github.io/WorkInData/reference/schoolCDS-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"schoolCDS: School Common Data Set (CDS) Data — schoolCDS-package","text":"Maintainer: Micah Iserman micah.iserman@gmail.com contributors: Data-Intensive Social Science Center [funder, copyright holder]","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Dataset — wid_aggregate","title":"Aggregate Dataset — wid_aggregate","text":"Create aggregates dataset.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Dataset — wid_aggregate","text":"","code":"wid_aggregate(data_dir, ..., levels = list(), cell_cutoff = 30,   selection = NULL, cores = parallel::detectCores() - 2)"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Dataset — wid_aggregate","text":"data_dir Path dataset, opened wid_open. ... Arguments pass wid_subset. levels list containing new redefined summaries include. name entry determines variable value, named vectors defining level (e.g., list(age = c(`20` = \"age < 20\", `60` = \"age > 60\"))). cell_cutoff Minimal cell size retain; cells count < cell_cutoff removed. selection character vector country_year_survey IDs selected, matrix-like object consisting 3 columns containing country, year, survey IDs order. cores Number CPU cores use.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Dataset — wid_aggregate","text":"aggregated version db.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate Dataset — wid_aggregate","text":"","code":"# aggregate a subset of the full dataset db_dir <- \"../../../gender_growth_gap\" if (dir.exists(db_dir)) {   selection <- data.frame(     country = c(\"IND\", \"IND\"),     year = c(2004, 2005),     survey = c(\"NSS\", \"NSS\")   )   wid_aggregate(db_dir, selection = selection) } #> cell cutoff removed 0 of 220 rows, which excludes 0 of 5348590 people. #> # A tibble: 220 × 8 #> # Groups:   country, year, sex, main_activity [20] #>    country  year sex    main_activity    variable level  count      weight #>    <chr>   <int> <chr>  <chr>            <chr>    <chr>  <int>       <dbl> #>  1 IND      2004 Male   Agriculture      total    all    35926 24064533317 #>  2 IND      2004 Male   Industry         total    all    16481 11128806979 #>  3 IND      2004 Male   Out of Workforce total    all    70017 44254977451 #>  4 IND      2004 Male   Services         total    all    28950 15085808237 #>  5 IND      2004 Male   Unemployed       total    all     3285  1387083480 #>  6 IND      2004 Female Agriculture      total    all    19484 14054462526 #>  7 IND      2004 Female Industry         total    all     4277  3012645334 #>  8 IND      2004 Female Out of Workforce total    all   112098 69773958219 #>  9 IND      2004 Female Services         total    all     5937  3180440202 #> 10 IND      2004 Female Unemployed       total    all     1316   527369104 #> # ℹ 210 more rows"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_convert_isic.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ISIC Codes — wid_convert_isic","title":"Convert ISIC Codes — wid_convert_isic","text":"Convert International Standard Industrial Classification (ISIC) codes aggregate economic activity categories, based International Labour Organization classification.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_convert_isic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ISIC Codes — wid_convert_isic","text":"","code":"wid_convert_isic(codes, level = 4L, full_label = FALSE)"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_convert_isic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ISIC Codes — wid_convert_isic","text":"codes character vector original ISIC codes, can section, division, group, class, 4-digit level. latest unique classification used unless original code revision prefix: 40_, 31_, 30_ revisions 4, 3.1, 3. level Level dis-aggregation (determining number categories): full_label Logical; TRUE, return full text labels rather short codes.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_convert_isic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ISIC Codes — wid_convert_isic","text":"character vector containing short code labels.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_convert_isic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ISIC Codes — wid_convert_isic","text":"","code":"(codes <- LETTERS[1:21]) #>  [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" #> [20] \"T\" \"U\" wid_convert_isic(codes) #>  [1] \"A\" \"I\" \"I\" \"I\" \"I\" \"I\" \"S\" \"S\" \"S\" \"S\" \"S\" \"S\" \"S\" \"S\" \"S\" \"S\" \"S\" \"S\" \"S\" #> [20] \"S\" \"S\" wid_convert_isic(codes, 1, full_label = TRUE) #>  [1] \"Agriculture\"      \"Mining\"           \"Manufacturing\"    \"Electrical\"       #>  [5] \"Water\"            \"Construction\"     \"Trade\"            \"Transportation\"   #>  [9] \"Service\"          \"Information\"      \"Financial\"        \"Property\"         #> [13] \"Professional\"     \"Administrative\"   \"Public\"           \"Education\"        #> [17] \"Health\"           \"Arts\"             \"Other\"            \"Households\"       #> [21] \"Extraterritorial\" wid_convert_isic(codes, 2, full_label = TRUE) #>  [1] \"Agriculture\"              \"Industry - Resources\"     #>  [3] \"Industry - Manufacturing\" \"Industry - Resources\"     #>  [5] \"Industry - Resources\"     \"Industry - Construction\"  #>  [7] \"Services - Market\"        \"Services - Market\"        #>  [9] \"Services - Market\"        \"Services - Market\"        #> [11] \"Services - Market\"        \"Services - Market\"        #> [13] \"Services - Market\"        \"Services - Market\"        #> [15] \"Services - Non-Market\"    \"Services - Non-Market\"    #> [17] \"Services - Non-Market\"    \"Services - Non-Market\"    #> [19] \"Services - Non-Market\"    \"Services - Non-Market\"    #> [21] \"Services - Non-Market\""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_download_external.html","id":null,"dir":"Reference","previous_headings":"","what":"Download External Resources — wid_download_external","title":"Download External Resources — wid_download_external","text":"Download country map information.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_download_external.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download External Resources — wid_download_external","text":"","code":"wid_download_external(out_dir)"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_download_external.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download External Resources — wid_download_external","text":"out_dir Directory save resources.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_download_external.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download External Resources — wid_download_external","text":"Nothing; writes files out_dir.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_make_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Variable Summaries — wid_make_report","title":"Report Variable Summaries — wid_make_report","text":"Generate report variable summaries.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_make_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Variable Summaries — wid_make_report","text":"","code":"wid_make_report(reformat_dir, output = \"vignettes/articles/variables.Rmd\")"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_make_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Variable Summaries — wid_make_report","text":"reformat_dir Path reformatted dataset. output Path write report .","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_make_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Variable Summaries — wid_make_report","text":"Nothing; creates output file.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_make_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report Variable Summaries — wid_make_report","text":"","code":"if (FALSE) { # \\dontrun{    wid_make_report(\"../gender_growth_gap\") } # }"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_make_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Dataset — wid_make_summaries","title":"Summarize Dataset — wid_make_summaries","text":"Calculate summaries reformatted dataset.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_make_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Dataset — wid_make_summaries","text":"","code":"wid_make_summaries(reformat_dir, manifest_dir = NULL, by_sex = FALSE,   cores = parallel::detectCores() - 5)"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_make_summaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Dataset — wid_make_summaries","text":"reformat_dir Directory containing reformatted dataset. manifest_dir Directory write summaries . by_sex Logical; TRUE, break summaries sex. cores Number CPU cores use processing.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_make_summaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Dataset — wid_make_summaries","text":"list entries variable: type Value type. missing Number missing values across entire dataset. value_summary Summary values, depending type.     categorical variables, observation counts level.     continuous variables, min, mean, standard deviation,     median, max. identifier-like variables (character vectors     many unique values), alphabetically first last value,     number unique values. by_survey Value summaries within survey year     observations.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_make_summaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Dataset — wid_make_summaries","text":"","code":"if (FALSE) { # \\dontrun{    wid_make_summaries(\"../gender_growth_gap\", \"explore/public\", by_sex = TRUE) } # }"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Open Dataset — wid_open","title":"Open Dataset — wid_open","text":"Open Work Data dataset.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open Dataset — wid_open","text":"","code":"wid_open(location = \"work-in-data\", ...,   key = Sys.getenv(\"AWS_ACCESS_KEY_ID\"),   secret = Sys.getenv(\"AWS_SECRET_ACCESS_KEY\"))"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open Dataset — wid_open","text":"location Local remote path dataset. ... Passes additional arguments s3_bucket. key AWS access key; defaults AWS_ACCESS_KEY_ID environment variable. secret AWS secret key; defaults AWS_SECRET_ACCESS_KEY environment variable.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open Dataset — wid_open","text":"Work Data Dataset.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_open.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open Dataset — wid_open","text":"","code":"if (FALSE) { # \\dontrun{    wid_open(\"/gpfs/gibbs/pi/dissc/work-in-data/gender_growth_gap\") } # }"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_reformat.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat Original Data — wid_reformat","title":"Reformat Original Data — wid_reformat","text":"Convert original Work Data cleaned files parquet dataset.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_reformat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat Original Data — wid_reformat","text":"","code":"wid_reformat(original_dir, reformat_dir, selection = NULL,   isic_prefixes = list(), cores = parallel::detectCores() - 2,   overwrite = FALSE)"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_reformat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat Original Data — wid_reformat","text":"original_dir Directory containing cleaned data. reformat_dir Directory save dataset files . selection Character vector specifying subset files include (e.g., c(\"AGO_2008_IBEP\", \"ALB_20.._LFS\", \"2024\")). isic_prefixes list mapping country_year_survey IDs ISIC prefixes (30_, 31_, 40_, revisions 3, 3.1, 4). cores Number CPU cores use processing. overwrite Logical; TRUE, rewrite existing partitions.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_reformat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat Original Data — wid_reformat","text":"Nothing; writes files reformat_dir.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_reformat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reformat Original Data — wid_reformat","text":"","code":"if (FALSE) { # \\dontrun{    wid_reformat(\"../data_cleaned\", \"../gender_growth_gap\") } # }"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Work In Data Schema — wid_schema","title":"Work In Data Schema — wid_schema","text":"Make Arrow schema read Work Data files.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Work In Data Schema — wid_schema","text":"","code":"wid_schema(original = FALSE)"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Work In Data Schema — wid_schema","text":"original TRUE, returns schema original format, rather reformatted dataset.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Work In Data Schema — wid_schema","text":"Arrow schema.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Work In Data Schema — wid_schema","text":"","code":"wid_schema() #> Schema #> survey: string #> year: int32 #> country: string #> survey_year: int16 #> wgt: float #> rural: bool #> id_ind: string #> age: int32 #> sex: bool #> marital_status: string #> n_child_5: int16 #> education: string #> work: bool #> work_search: bool #> main_job_ind: string #> main_activity: string"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Dataset — wid_subset","title":"Subset Dataset — wid_subset","text":"Select subset dataset.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Dataset — wid_subset","text":"","code":"wid_subset(db = NULL, ..., variables = NULL, surveys = NULL,   min_year = -Inf, max_year = Inf, selection = NULL)"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Dataset — wid_subset","text":"db dataset subset; Dataset returned wid_open. ... Conditions form variable operator value (e.g., age > 50). variables character vector containing variables want require. , observations values variables included. surveys character vector survey abbreviations include. min_year Earliest year include. max_year Latest year include. selection character vector country_year_survey IDs selected, matrix-like object consisting 3 columns containing country, year, survey IDs order.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Dataset — wid_subset","text":"filtered version db provided, list entries remaining variables, surveys, years.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Dataset — wid_subset","text":"","code":"# see what's available in a given year wid_subset(max_year = 1998) #> $variables #>  [1] \"age\"            \"country\"        \"education\"      \"id_ind\"         #>  [5] \"main_activity\"  \"main_job_ind\"   \"marital_status\" \"n_child_5\"      #>  [9] \"rural\"          \"sex\"            \"survey\"         \"survey_year\"    #> [13] \"wgt\"            \"work\"           \"work_search\"    \"year\"           #>  #> $surveys #> [1] \"BHPS\"      \"CASEN\"     \"CPS-IPUMS\" \"GLSS\"      \"IPUMS\"     \"KLIPS\"     #> [7] \"LFS\"       \"NSS\"       #>  #> $years #>  [1] 1960 1962 1963 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 #> [16] 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 #> [31] 1994 1995 1996 1997 1998 #>   # see which variables and years are in a particular survey wid_subset(surveys = \"CASEN\") #> $variables #>  [1] \"age\"            \"country\"        \"education\"      \"id_ind\"         #>  [5] \"main_activity\"  \"main_job_ind\"   \"marital_status\" \"n_child_5\"      #>  [9] \"rural\"          \"sex\"            \"survey\"         \"wgt\"            #> [13] \"work\"           \"work_search\"    \"year\"           #>  #> $surveys #> [1] \"CASEN\" #>  #> $years #>  [1] 1990 1992 1994 1996 1998 2000 2003 2006 2009 2011 2013 2015 2017 #>   # see which surveys and years have a particular variable wid_subset(variables = \"work_search\")[-1] #> $surveysyears #>  [1] 1960 1962 1963 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 #> [16] 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 #> [31] 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 #> [46] 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 #>   # filter to a subset of data db_dir <- \"../../../gender_growth_gap\" if (dir.exists(db_dir)) {   wid_open(db_dir) |> wid_subset(age > 200) |> dplyr::collect() } #> # A tibble: 5 × 15 #>     age country education id_ind      main_activity  main_job_ind marital_status #>   <int> <chr>   <chr>     <chr>       <chr>          <chr>        <chr>          #> 1   653 IND     None      45727110201 Agriculture    31_111       Never Married  #> 2   205 IND     Primary   41499210202 Out of Workfo… NA           Married / In-… #> 3   262 IND     Graduate  41962220204 Out of Workfo… NA           Married / In-… #> 4   302 IND     NA        43285110203 Industry       31_2029      Married / In-… #> 5   810 IND     NA        43977220104 Out of Workfo… NA           Never Married  #> # ℹ 8 more variables: n_child_5 <int>, rural <lgl>, sex <lgl>, survey <chr>, #> #   wgt <dbl>, work <lgl>, work_search <lgl>, year <int>"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_update_country_map.html","id":null,"dir":"Reference","previous_headings":"","what":"wid_update_country_map: GEOJSON map of countries. — wid_update_country_map","title":"wid_update_country_map: GEOJSON map of countries. — wid_update_country_map","text":"wid_update_country_map: GEOJSON map countries.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_update_country_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wid_update_country_map: GEOJSON map of countries. — wid_update_country_map","text":"","code":"wid_update_country_map(out_dir = getOption(\"WID_RESOURCE_DIR\"))"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_update_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Resources — wid_update_country_map","title":"Update Resources — wid_update_country_map","text":"Download resources external sources: wid_update_resources: Update resources. wid_update_world_bank: Country-level data World Bank (using WDI package). wid_update_country_map: GeoJSON map countries Natural Earth Vector. wid_update_isic: International Standard Industrial Classification (ISIC)     code mappings International Labour Organization.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_update_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Resources — wid_update_country_map","text":"","code":"wid_update_country_map(out_dir = getOption(\"WID_RESOURCE_DIR\"),   overwrite = FALSE, simplify = FALSE)  wid_update_isic(out_dir = getOption(\"WID_RESOURCE_DIR\"), overwrite = FALSE)  wid_update_resources(out_dir = getOption(\"WID_RESOURCE_DIR\"),   overwrite = FALSE)  wid_update_world_bank(out_dir = getOption(\"WID_RESOURCE_DIR\"),   overwrite = FALSE)"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_update_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Resources — wid_update_country_map","text":"out_dir Directory save resources. overwrite Logical; TRUE, re-download replace existing resources. simplify Logical; TRUE, simplify shapes.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_update_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Resources — wid_update_country_map","text":"Nothing; writes files out_dir.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_update_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Resources — wid_update_country_map","text":"","code":"if (FALSE) { # \\dontrun{    wid_update_resources() } # }"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Work In Data Variables — wid_variables","title":"Work In Data Variables — wid_variables","text":"Retrieve information variables.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Work In Data Variables — wid_variables","text":"","code":"wid_variables()"},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Work In Data Variables — wid_variables","text":"list variable info: name: Display name. description: Description variable. type: Arrow data type. summary_type: Type summary. summary: summary, created wid_make_summaries.","code":""},{"path":"https://dissc-yale.github.io/WorkInData/reference/wid_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Work In Data Variables — wid_variables","text":"","code":"names(wid_variables()) #>  [1] \"survey\"         \"year\"           \"country\"        \"survey_year\"    #>  [5] \"wgt\"            \"rural\"          \"id_ind\"         \"age\"            #>  [9] \"sex\"            \"marital_status\" \"n_child_5\"      \"education\"      #> [13] \"work\"           \"work_search\"    \"main_job_ind\"   \"main_activity\"  wid_variables()[[\"work\"]][c(   \"name\", \"category\", \"description\", \"type\", \"conversion\", \"summary_type\" )] #> $name #> [1] \"Working\" #>  #> $category #> [1] \"Work\" #>  #> $description #> [1] \"Whether the respondent worked in the reference period.\" #>  #> $type #> [1] \"int8\" #>  #> $conversion #> $conversion$type #> [1] \"bool\" #>  #> $conversion$true_value #> [1] 1 #>  #>  #> $summary_type #> [1] \"table\" #>"}]
